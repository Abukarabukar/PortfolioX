package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PhotoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPhotoAllPropertiesEquals(Photo expected, Photo actual) {
        assertPhotoAutoGeneratedPropertiesEquals(expected, actual);
        assertPhotoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPhotoAllUpdatablePropertiesEquals(Photo expected, Photo actual) {
        assertPhotoUpdatableFieldsEquals(expected, actual);
        assertPhotoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPhotoAutoGeneratedPropertiesEquals(Photo expected, Photo actual) {
        assertThat(expected)
            .as("Verify Photo auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPhotoUpdatableFieldsEquals(Photo expected, Photo actual) {
        assertThat(expected)
            .as("Verify Photo relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()))
            .satisfies(e -> assertThat(e.getUrl()).as("check url").isEqualTo(actual.getUrl()))
            .satisfies(e -> assertThat(e.getDate()).as("check date").isEqualTo(actual.getDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPhotoUpdatableRelationshipsEquals(Photo expected, Photo actual) {
        assertThat(expected)
            .as("Verify Photo relationships")
            .satisfies(e -> assertThat(e.getAbukarUser()).as("check abukarUser").isEqualTo(actual.getAbukarUser()));
    }
}
